{"ast":null,"code":"var _jsxFileName = \"d:\\\\myntra-hackerramp\\\\frontend\\\\my-wardrobe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/images');\n      setImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setUploadedImage(URL.createObjectURL(selectedFile));\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage('Please select a file.');\n      return;\n    }\n    setUploading(true);\n    setMessage('');\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(res.data);\n      setMessage('File uploaded successfully!');\n      setFile(null); // Clear file state\n      setUploadedImage(null); // Clear uploaded image preview\n      fetchImages(); // Refresh images after upload\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      setMessage('Error uploading file. Please try again.');\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Your Wardrobe Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: uploading,\n        children: uploading ? 'Uploading...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }, this), uploadedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadedImage,\n        alt: \"Uploaded\",\n        className: \"preview-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      className: \"images-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Uploaded Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), images.length > 0 ? images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/${image.path}` // Adjust path based on your server setup\n          ,\n          alt: image.filename,\n          className: \"uploaded-image\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = 'placeholder-image-url'; // Replace with a placeholder image URL or alternative text\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"image-name\",\n          children: image.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)]\n      }, image._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images uploaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"4xr6z8fPTQ5w4QdDguMcvX5Py3k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","uploading","setUploading","message","setMessage","uploadedImage","setUploadedImage","images","setImages","fetchImages","response","get","data","error","console","handleFileChange","e","selectedFile","target","files","URL","createObjectURL","handleUpload","formData","FormData","append","res","post","headers","log","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","src","alt","id","length","map","image","path","filename","onError","onerror","_id","_c","$RefreshReg$"],"sources":["d:/myntra-hackerramp/frontend/my-wardrobe/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import the CSS file\n\nfunction App() {\n    const [file, setFile] = useState(null);\n    const [uploading, setUploading] = useState(false);\n    const [message, setMessage] = useState('');\n    const [uploadedImage, setUploadedImage] = useState(null);\n    const [images, setImages] = useState([]);\n\n    useEffect(() => {\n        fetchImages();\n    }, []);\n\n    const fetchImages = async () => {\n        try {\n            const response = await axios.get('http://localhost:5000/images');\n            setImages(response.data);\n        } catch (error) {\n            console.error('Error fetching images:', error);\n        }\n    };\n\n    const handleFileChange = (e) => {\n        const selectedFile = e.target.files[0];\n        setFile(selectedFile);\n        setUploadedImage(URL.createObjectURL(selectedFile));\n    };\n\n    const handleUpload = async () => {\n        if (!file) {\n            setMessage('Please select a file.');\n            return;\n        }\n\n        setUploading(true);\n        setMessage('');\n\n        const formData = new FormData();\n        formData.append('image', file);\n\n        try {\n            const res = await axios.post('http://localhost:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            console.log(res.data);\n            setMessage('File uploaded successfully!');\n            setFile(null); // Clear file state\n            setUploadedImage(null); // Clear uploaded image preview\n            fetchImages(); // Refresh images after upload\n        } catch (err) {\n            console.error('Error uploading file:', err);\n            setMessage('Error uploading file. Please try again.');\n        } finally {\n            setUploading(false);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Upload Your Wardrobe Image</h1>\n            <div className=\"upload-container\">\n                <input type=\"file\" onChange={handleFileChange} />\n                <button onClick={handleUpload} disabled={uploading}>\n                    {uploading ? 'Uploading...' : 'Upload'}\n                </button>\n            </div>\n            {message && <p className=\"message\">{message}</p>}\n            {uploadedImage && (\n                <div className=\"preview-container\">\n                    <h2>Preview</h2>\n                    <img src={uploadedImage} alt=\"Uploaded\" className=\"preview-image\" />\n                </div>\n            )}\n            <div id=\"container\" className=\"images-container\">\n                <h2>Uploaded Images</h2>\n                {images.length > 0 ? (\n                    images.map((image) => (\n                        <div key={image._id} className=\"image-item\">\n                            <img\n                                src={`http://localhost:5000/${image.path}`} // Adjust path based on your server setup\n                                alt={image.filename}\n                                className=\"uploaded-image\"\n                                onError={(e) => {\n                                    e.target.onerror = null;\n                                    e.target.src = 'placeholder-image-url'; // Replace with a placeholder image URL or alternative text\n                                }}\n                            />\n                            <p className=\"image-name\">{image.filename}</p>\n                        </div>\n                    ))\n                ) : (\n                    <p>No images uploaded yet.</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}